syntax = "proto3";

import 'protobufs/model/email.proto';
import 'protobufs/model/contact.proto';
import 'protobufs/model/integration.proto';

package work_api.protobufs.requests;

message EmailInitOauthRequest {
  model.Integration integration = 1;
  string state = 2;
  string redirect_uri = 3;
}

message EmailAuthenticateOauthRequest {
  model.Integration integration = 1;
  string code = 2;
  string state = 3;
}

message EmailRefreshOauthRequest {
  model.Integration integration = 1;
}

message EmailWatchChangesRequest {
  model.Integration integration = 1;
}

message EmailGetChangesRequest {
  model.Integration integration = 1;
  string change_id = 2;
}

message ListMailboxesRequest {
  repeated string integration_ids = 1;
}

message CreateMailboxRequest {
  model.Mailbox mailbox = 1;
}

message ListEmailsRequest {
  repeated string integration_ids = 1;
  repeated string mailbox_ids = 2;
  model.Contact contact = 3;
  uint32 limit = 4;
  string page = 5;
  string search_text = 6;
  string before_date = 7;
  string after_date = 8;
  bool exclude_attachments = 9;
  bool metadata_only = 10;
}

message GetConversationRequest {
  model.Conversation conversation = 1;
}

message CreateDraftRequest {
  // Email object, no IDs
  model.Email email = 2;
}

message UpdateDraftRequest {
  model.Email email = 1;
}

// an existing draft by id, or a brand new message
message SendEmailRequest {
  model.Email email = 2;
}

message ModifyEmailsRequest {
  // Infer integration ID from email IDs. Potentially mixed

  // Email objects: ID + all fields; can't guarantee all APIs support PATCH semantics
  repeated model.Email emails = 1;
}

message GetEmailsRequest {
  // Infer integration ID from email IDs. Potentially mixed

  // partial Email objects: IDs only
  repeated model.Email emails = 1;
}

message GetEmailAttachmentsRequest {
  string integration_id = 1;

  // Email object, with attachment references
  model.Email email = 2;
}

message DeleteEmailsRequest {
  // Infer integration ID from email IDs. Potentially mixed

  // partial Email objects: IDs only
  repeated model.Email emails = 2;
}

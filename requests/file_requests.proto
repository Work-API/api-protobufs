syntax = "proto3";

import 'protobufs/model/file.proto';
import 'protobufs/model/integration.proto';

package work_api.protobufs.requests;

message FileInitOauthRequest {
  model.Integration integration = 1;
  string state = 2;
  string redirect_uri = 3;
}

message FileAuthenticateOauthRequest {
  model.Integration integration = 1;
  string code = 2;
  string state = 3;
}

message FileRefreshOauthRequest {
  model.Integration integration = 1;
}

message FileWatchChangesRequest {
  model.Integration integration = 1;
}

enum SortBy {
  CREATED_AT_ASC = 0;
  CREATED_AT_DESC = 1;
  UPDATED_AT_ASC = 2;
  UPDATED_AT_DESC = 3;
  FILENAME_ASC = 4;
  FILENAME_DESC = 5;
  TYPE_ASC = 6;
  TYPE_DESC = 7;
  SIZE_ASC = 8;
  SIZE_DESC = 9;
}

message ListFilesRequest {
  repeated string integration_ids = 1;
  string parent_id = 2;
  uint32 limit = 3;
  string page = 4;
  string search_text = 5;

  string updated_before = 8;
  string updated_after = 9;

  repeated SortBy sort_by = 10;
}

message CreateFilesRequest {
  repeated string integration_ids = 1;

  // skeletal File objects, no IDs, minimal meta
  repeated model.File files = 2;
}

message ModifyFilesRequest {
  // Infer integration ID from file IDs. Potentially mixed

  // File objects: ID + all fields; can't guarantee all APIs support PATCH semantics
  repeated model.File files = 1;
}

message GetFilesRequest {
  // Infer integration ID from file IDs. Potentially mixed

  // partial File objects: IDs only
  repeated model.File files = 2;
}

message DeleteFilesRequest {
  // Infer integration ID from file IDs. Potentially mixed

  // partial File objects: IDs only
  repeated model.File files = 2;
}

message MoveFilesRequest {
  repeated model.File files = 1;
  string integration_id = 3;
  string parent_id = 2;
}

message CopyFilesRequest {
  repeated model.File files = 1;
  string integration_id = 3;
  string parent_id = 2;
}

// list all permissions for multiple files
message GetFilePermissionsRequest {
  repeated model.File files = 1;
}

// modify permissions for multiple files
message ModifyFilePermissionsRequest {
  repeated model.File files = 1;
}

// create permissions for a multiple files
message CreateFilePermissionsRequest {
  repeated model.File files = 1;
}

// delete permissions for a multiple files
message DeleteFilePermissionsRequest {
  repeated model.File files = 1;
}
